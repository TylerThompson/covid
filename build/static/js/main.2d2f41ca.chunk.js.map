{"version":3,"sources":["actions/constants.js","reducers/statisticsReducer.js","reducers/countryStatisticsReducer.js","reducers/markersReducer.js","reducers/mapStyleReducer.js","reducers/setActionReducer.js","reducers/index.js","store/index.js","components/statistics/CoronaStatisticsContainer.js","actions/index.js","components/statistics/CoronaStatisticsProvider.js","components/map/MapComponent.js","components/map/MapProvider.js","App.js","serviceWorker.js","index.js"],"names":["MAPBOX_ACCESS_TOKEN","process","MAP_API_TOKEN","initialState","results","statisticsReducer","state","action","type","newState","payload","statistics","countryStatisticsReducer","markers","markersReducer","style","mapStyleReducer","setActionReducer","rootReducer","combineReducers","countryStatistics","middle","applyMiddleware","thunk","logger","store","createStore","CoronaStatisticsContainer","props","showCountryStatistics","item","index","matches","setState","isSelected","tabSelectedtPos","tabMenuSelect","setAction","coordinates","onTabSelection","isAboutModal","onSetMapStyle","mapStyle","setMapStyle","onSetAboutModal","isShown","renderItem","key","country","className","onClick","bind","src","flag","alt","value","confirmed","displayType","thousandSeparator","deaths","recovered","searchCountry","event","keyword","target","newData","filter_statistics","filter","itemData","toUpperCase","textData","indexOf","isLoading","showHide","elements","specifiedDisplay","element","length","isElementHidden","display","window","getComputedStyle","getPropertyValue","toggle","document","querySelectorAll","renderStatistics","data","JSON","parse","stringify","undefined","totalConfirmed","total_confirmed","totalDeaths","total_deaths","totalRecovered","total_recovered","date","last_date_updated","country_statistics","show","href","rel","placeholder","onChange","e","list","extraData","showsVerticalScrollIndicator","showsHorizontalScrollIndicator","color","size","matchMedia","this","fetchCoronaStatistics","Component","connect","dispatch","fetch","then","response","json","dispatchStatistics","CoronaStatisticsProvider","PORT","mapboxgl","accessToken","map","MapComponent","mapboxElRef","createRef","renderMap","nav","NavigationControl","addControl","once","addSource","features","addLayer","id","source","paint","previous_id","popup","Popup","closeButton","closeOnClick","on","properties","name","getCanvas","cursor","geometry","slice","HTML","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","remove","Map","container","current","center","zoom","actionType","flyTo","bearing","speed","curve","easing","t","essential","ref","MapProvider","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2d2f41ca.chunk.js","sourcesContent":["export const FETCH_CORONA_STATISTICS = 'FETCH_CORONA_STATISTICS';\nexport const SHOW_COUNTRY_STATISTICS = 'SHOW_COUNTRY_STATISTICS';\nexport const FETCH_MARKERS = 'FETCH_MARKERS';\nexport const MAP_STYLE = 'MAP_STYLE';\nexport const SET_ACTION = 'SET_ACTION';\nexport const MAP_STYLE_ACTION = 'MAP_STYLE_ACTION';\nexport const MAP_FLY_ACTION = 'MAP_FLY_ACTION';\n\nexport const BASE_URL = `/`;\nexport const MAPBOX_ACCESS_TOKEN = process.env.MAP_API_TOKEN || 'MAP_API_TOKEN';","import {FETCH_CORONA_STATISTICS} from '../actions/constants';\n\nconst initialState = {\n    results: '',\n};\n\nconst statisticsReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case FETCH_CORONA_STATISTICS: {\n        const newState = {\n          ...state,\n          results: action.payload,\n        };\n        return newState;\n      }\n      default:\n        return state;\n    }\n};\n  \nexport default statisticsReducer;","import {SHOW_COUNTRY_STATISTICS} from '../actions/constants';\n\nconst initialState = {\n  statistics: '',\n};\n\nconst countryStatisticsReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SHOW_COUNTRY_STATISTICS: {\n        const newState = {\n          ...state,\n          statistics: action.payload,\n        };\n        return newState;\n      }\n      default:\n        return state;\n    }\n  };\n  \n  export default countryStatisticsReducer;","import {FETCH_MARKERS} from '../actions/constants';\n\nconst initialState = {\n  markers: '',\n};\n\nconst markersReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case FETCH_MARKERS: {\n        const newState = {\n          ...state,\n          markers: action.payload,\n        };\n        return newState;\n      }\n      default:\n        return state;\n    }\n  };\n  \n  export default markersReducer;","import { MAP_STYLE } from '../actions/constants';\n\nconst initialState = {\n  style: 'mapbox://styles/tylerthompson/ckj21v2hi2dph19o1zu61cz8y',\n};\n\nconst mapStyleReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case MAP_STYLE: {\n      const newState = {\n        ...state,\n        style: action.payload,\n      };\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default mapStyleReducer;","import {SET_ACTION} from '../actions/constants';\n\nconst initialState = {\n  action: '',\n};\n\nconst setActionReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case SET_ACTION: {\n        const newState = {\n          ...state,\n          action: action.payload,\n        };\n        return newState;\n      }\n      default:\n        return state;\n    }\n  };\n  \n  export default setActionReducer;","import {combineReducers} from 'redux';\n\nimport statisticsReducer from '../reducers/statisticsReducer';\nimport countryStatisticsReducer from '../reducers/countryStatisticsReducer';\nimport markersReducer from '../reducers/markersReducer';\nimport mapStyleReducer from '../reducers/mapStyleReducer';\nimport setActionReducer from '../reducers/setActionReducer';\n\nconst rootReducer = combineReducers({\n    statistics: statisticsReducer,\n    countryStatistics: countryStatisticsReducer,\n    markers: markersReducer,\n    style: mapStyleReducer,\n    action: setActionReducer\n});\n\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport rootReducer from '../reducers';\n\nconst middle = applyMiddleware(thunk, logger);\nconst store = createStore(rootReducer, middle);\n\nexport default store;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport NumberFormat from 'react-number-format';\nimport { OrbitSpinner } from 'react-epic-spinners';\nimport FlatList from 'flatlist-react';\n\nimport { fetchCoronaStatistics, showCountryStatistics, setMapStyle, setAction } from '../../actions';\nimport { MAP_STYLE_ACTION, MAP_FLY_ACTION } from '../../actions/constants';\n\nclass CoronaStatisticsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      isAboutModal: false,\n      isSelected: -1,\n      tabMenuSelect: 1,\n      tabSelectedtPos: -1,\n      statistics: [],\n      matches: window.matchMedia(\"(min-width: 1000px)\").matches\n    }\n    this.filter_statistics = [];\n  }\n\n  componentDidMount() {\n    this.props.fetchCoronaStatistics();\n  }\n\n  showCountryStatistics = (item, index) => {\n    if (this.state.matches) {\n      this.setState({\n        isSelected: index\n      })\n    } else {\n      this.setState({\n        isSelected: index,\n        tabSelectedtPos: 2,\n        tabMenuSelect: 2\n      })\n    }\n    this.props.setAction(MAP_FLY_ACTION);\n    this.props.showCountryStatistics(item.coordinates)\n  }\n\n  onTabSelection = (index) => {\n    if (index === 3) {\n      this.setState({\n        tabSelectedtPos: index,\n        tabMenuSelect: index,\n        isAboutModal: true\n      })\n    } else {\n      this.setState({\n        tabSelectedtPos: index,\n        tabMenuSelect: index,\n        isAboutModal: false\n      })\n    }\n  }\n\n  onSetMapStyle = (mapStyle) => {\n    this.props.setAction(MAP_STYLE_ACTION);\n    this.props.setMapStyle(mapStyle);\n  }\n\n  onSetAboutModal = (isShown) => {\n    this.setState({\n      isAboutModal: isShown\n    })\n  }\n\n  renderItem = (item, index) => {\n\n    return (\n      <div key={item.country} className={'country-statistics-container'}>\n        <div className={this.state.isSelected === index ? 'country-selected-list-container' : 'country-list-container'} onClick={this.showCountryStatistics.bind(this, item, index)}>\n          <div className={'country-name-container'}>\n            <img src={item.flag} alt={item.country} className={'country-flag'} />\n            <span className={'country-name-txt'}>{item.country === 'US' ? 'United States' : item.country}</span>\n          </div>\n          <div className={'country-statistics-container'}>\n            <NumberFormat\n              className={'country-statistics-txt'}\n              value={item.confirmed}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n            <span className={'country-statistics-label-txt'}>CONFIRMED</span>\n          </div>\n          <div className={'country-statistics-container'}>\n            <NumberFormat\n              className={'country-statistics-txt'}\n              value={item.deaths}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n            <span className={'country-statistics-label-txt'}>DEATHS</span>\n          </div>\n          <div className={'country-statistics-container'}>\n            <NumberFormat\n              className={'country-statistics-txt'}\n              value={item.recovered}\n              displayType={'text'}\n              thousandSeparator={true}\n            />\n            <span className={'country-statistics-label-txt'}>RECOVERED</span>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  searchCountry = (event) => {\n    let keyword = event.target.value;\n    const newData = this.filter_statistics.filter(item => {\n      const itemData = `${item.country.toUpperCase()}`;\n      const textData = keyword.toUpperCase();\n      return itemData.indexOf(textData) > -1;\n    });\n    this.setState({\n      isLoading: true,\n      statistics: newData\n    });\n  }\n\n  showHide = (event) => {\n    toggle(document.querySelectorAll('.target'));\n\n    function toggle(elements, specifiedDisplay) {\n      var element, index;\n\n      elements = elements.length ? elements : [elements];\n      for (index = 0; index < elements.length; index++) {\n        element = elements[index];\n\n        if (isElementHidden(element)) {\n          element.style.display = '';\n\n          // If the element is still hidden after removing the inline display\n          if (isElementHidden(element)) {\n            element.style.display = specifiedDisplay || 'block';\n          }\n        } else {\n          element.style.display = 'none';\n        }\n      }\n      function isElementHidden(element) {\n        return window.getComputedStyle(element, null).getPropertyValue('display') === 'none';\n      }\n    }\n  }\n\n  renderStatistics = () => {\n    var data = JSON.parse(JSON.stringify(this.props.statistics)).results;\n    if (data !== undefined) {\n      var totalConfirmed = data.total_confirmed;\n      var totalDeaths = data.total_deaths;\n      var totalRecovered = data.total_recovered;\n      var date = data.last_date_updated;\n\n      var statistics = data.country_statistics;\n      if (statistics !== undefined && !this.state.isLoading) {\n        this.filter_statistics = statistics;\n        this.setState({\n          isLoading: true,\n          statistics: statistics\n        })\n      }\n\n      return (\n        <div className={'list-container'}>\n          <div className={'header-container'}>\n            <div className={'covid-label-container'}>\n              <p className={'covid-label'}>\n                <img src=\"/img/ms-icon-70x70.png\" alt=\"Coronavirus (COVID-19)\" />\n                 Tracker\n\n              <button className={'covid-about'} onClick={() => { this.setState({ show: !this.state.show }) }}><img src=\"/img/icons/ic_info.svg\" alt=\"About\" /></button>\n              </p>\n              <p className={'covid-desc-txt', (this.state.show ? '' : 'hide')}>\n                Coronavirus (COVID-19) which is an infectious disease caused by respiratory illness and symptoms like flu, cough, fever, difficulty breathing, on December 31, 2019, the first case was recorded in Wuhan, China and later the virus got spread around the world and as of now around&nbsp;\n                <NumberFormat\n                  className={'total-confirmed-count'}\n                  value={totalConfirmed}\n                  displayType={'text'}\n                  thousandSeparator={true}\n                />&nbsp;confirmed cases are being recorded since then.\n              </p>\n              <p className={'covid-desc-txt', (this.state.show ? '' : 'hide')}>\n                The data being displayed is from from&nbsp;<a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" rel=\"noopener noreferrer\" className={'covid-desc-link-txt'}>Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE).</a>\n              </p>\n            </div>\n            <div className={'covid-date-container'}>\n              <span className={'covid-timeline-label'}>Last Updated:</span>\n              <span className={'covid-timeline'}>{date}</span>\n            </div>\n            <div className={'total-statistics-container'}>\n              <div className={'total-death-recovery-container'}>\n                <div className={'dr-container'}>\n                  <NumberFormat\n                    className={'total-confirmed-count'}\n                    value={totalConfirmed}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                  />\n                  <span className={'dr-confirmed-label'}>CONFIRMED</span>\n                </div>\n                <div className={'dr-container'}>\n                  <NumberFormat\n                    className={'total-deaths-count'}\n                    value={totalDeaths}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                  />\n                  <span className={'dr-deaths-label'}>DEATHS</span>\n                </div>\n                <div className={'dr-container'}>\n                  <NumberFormat\n                    className={'total-recovered-count'}\n                    value={totalRecovered}\n                    displayType={'text'}\n                    thousandSeparator={true}\n                  />\n                  <span className={'dr-recovered-label'}>RECOVERED</span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={'header-bottom-line'}></div>\n          <div className={'search-container'}>\n            <div className={'search-input-border'}>\n              <img src={\"/img/icons/ic_search.png\"} alt=\"Search\" className={'search-icon'} />\n              <input type=\"text\" className={'search-input-text'} placeholder=\"Search country\" onChange={(e) => this.searchCountry(e)} />\n            </div>\n          </div>\n          <div className={'counrty-statistics-list-container'}>\n            {this.state.isLoading && this.state.statistics && this.state.statistics.length > 0 ?\n              <FlatList\n                list={this.state.statistics}\n                renderItem={this.renderItem}\n                extraData={this.state}\n                showsVerticalScrollIndicator={false}\n                showsHorizontalScrollIndicator={false}\n              />\n              :\n              <div className={!this.state.isLoading ? 'progress-loading-container' : 'progress-loading-container-hide'}>\n                <OrbitSpinner\n                  color=\"black\"\n                  size={60} />\n                <p className={'please-wait-text'}>Please wait...</p>\n              </div>\n            }\n          </div>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={'corona-parent-container'}>\n        {this.state.isAboutModal ?\n          <div className={'about-parent-container'}>\n            <div className={'about-overlay-container'} onClick={this.onSetAboutModal.bind(this, false)}></div>\n            <div className={'about-modal-container'}>\n              <div className={'about-modal-header'}>\n                <p className={'about-modal-label'}>About</p>\n                <img src={\"/img/icons/ic_close.png\"} className={'about-modal-close-icon'} alt=\"Close\" onClick={this.onSetAboutModal.bind(this, false)} />\n              </div>\n              <div className={'about-modal-desc-container'}>\n                <p className={'about-modal-description'}>\n                  The idea behind this application is to displays the statistics of Coronavirus COVID-19 around the world and the data are being collected from&nbsp;\n                    <a href=\"https://github.com/CSSEGISandData/COVID-19\" target=\"_blank\" rel=\"noopener noreferrer\" className={'about-modal-link'}>Johns Hopkins University Center for Systems Science and Engineering (JHU CSSE)</a>&nbsp;\n                  and it updates the cases constantly on this website around the world.\n                </p>\n                <p className={'about-modal-description'}>\n                  If you don't find any of the cases are not reflecting on this website then also you can visit the&nbsp;\n                    <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019/situation-reports\" target=\"_blank\" rel=\"noopener noreferrer\" className={'about-modal-link'}>World Health Organization site.</a>\n                </p>\n              </div>\n            </div>\n          </div>\n          : null}\n        <div className={this.state.isAboutModal && !this.state.matches ? 'tooltip-container-hide' : 'tooltip-container'}>\n          <img src={\"/img/icons/ic_dark_map_style.PNG\"} className={'map-style-dark-img'} alt=\"Dark Theme\" onClick={this.onSetMapStyle.bind(this, 'mapbox://styles/hackbotone/ck8vtayrp0x5f1io3sakcmpnv')} />\n          <img src={\"/img/icons/ic_light_map_style.PNG\"} className={'map-style-light-img'} alt=\"Light Theme\" onClick={this.onSetMapStyle.bind(this, 'mapbox://styles/hackbotone/ck8vt8vdj2fz91ilax6nwtins')} />\n        </div>\n        <div className={this.state.tabSelectedtPos === 1 || this.state.tabSelectedtPos === 3 ? 'map-box-container-hide' : 'map-box-container'}></div>\n        <div className={this.state.tabSelectedtPos === 2 || this.state.tabSelectedtPos === 3 ? 'parent-container-hide' : 'parent-container'}>\n          {this.renderStatistics()}\n        </div>\n        <div className={'bottom-tab-menu-container'}>\n          <div className={this.state.tabMenuSelect === 1 ? 'total-cases-selected-tab-menu-container' : 'total-cases-tab-menu-container'} onClick={this.onTabSelection.bind(this, 1)}>\n            <img src={this.state.tabMenuSelect === 1 ? \"/img/icons/ic_selected_list.svg\" : \"/img/icons/ic_list.svg\"} alt=\"Total Cases\" className={'total-cases-icon'} />\n            <span className={this.state.tabMenuSelect === 1 ? 'total-cases-selected-label' : 'total-cases-label'}>Total Cases</span>\n          </div>\n          <div className={this.state.tabMenuSelect === 2 ? 'map-selected-tab-menu-container' : 'map-tab-menu-container'} onClick={this.onTabSelection.bind(this, 2)}>\n            <img src={this.state.tabMenuSelect === 2 ? \"/img/icons/ic_selected_map.svg\" : \"/img/icons/ic_map.svg\"} alt=\"Map\" className={'map-icon'} />\n            <span className={this.state.tabMenuSelect === 2 ? 'map-selected-label' : 'map-label'}>Map</span>\n          </div>\n          <div className={this.state.tabMenuSelect === 3 ? 'about-selected-tab-menu-container' : 'about-tab-menu-container'} onClick={this.onTabSelection.bind(this, 3)}>\n            <img src={this.state.tabMenuSelect === 3 ? \"/img/icons/ic_selected_info.svg\" : \"/img/icons/ic_info.svg\"} alt=\"About\" className={'about-icon'} />\n            <span className={this.state.tabMenuSelect === 3 ? 'about-selected-label' : 'about-label'}>About</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst stateProps = state => ({\n  statistics: state.statistics\n});\n\nconst dispatchProps = dispatch => ({\n  fetchCoronaStatistics: () => dispatch(fetchCoronaStatistics()),\n  showCountryStatistics: item => dispatch(showCountryStatistics(item)),\n  setMapStyle: style => dispatch(setMapStyle(style)),\n  setAction: action => dispatch(setAction(action))\n});\n\nexport default connect(stateProps, dispatchProps)(CoronaStatisticsContainer);\n","import {\n    FETCH_CORONA_STATISTICS,\n    SHOW_COUNTRY_STATISTICS,\n    FETCH_MARKERS,\n    MAP_STYLE,\n    SET_ACTION,\n    BASE_URL,\n} from './constants';\n\nexport const dispatchStatistics = data => ({\n    type: FETCH_CORONA_STATISTICS,\n    payload: data\n});\n\nexport const dispatchMarkers = data => ({\n    type: FETCH_MARKERS,\n    payload: data\n});\n\nexport const fetchCoronaStatistics = () => dispatch => {\n    fetch(`${BASE_URL}api`)\n        .then(response => response.json())\n        .then(data => {\n            dispatch(dispatchStatistics(data));\n        })\n}\n\nexport const fetchMarkers = () => dispatch => {\n    fetch(BASE_URL + \"api/markers.geojson\")\n        .then(response => response.json())\n        .then(data => {\n            dispatch(dispatchMarkers(data));\n        })\n}\n\nexport const showCountryStatistics = item => ({\n    type: SHOW_COUNTRY_STATISTICS,\n    payload: { item }\n})\n\nexport const setMapStyle = style => ({\n    type: MAP_STYLE,\n    payload: { style }\n})\n\nexport const setAction = action => ({\n    type: SET_ACTION,\n    payload: { action }\n})","import React, {Component} from 'react';\n\nimport CoronaStatisticsContainer from './CoronaStatisticsContainer';\n\nclass CoronaStatisticsProvider extends Component {\n  render() {\n    return <CoronaStatisticsContainer/>;\n  }\n}\n\nexport default CoronaStatisticsProvider;\n","import React, { createRef, Component } from 'react';\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nimport { connect } from 'react-redux';\n\nimport { MAPBOX_ACCESS_TOKEN, MAP_STYLE_ACTION, MAP_FLY_ACTION } from '../../actions/constants';\nconst PORT = process.env.PORT || 3000;\nmapboxgl.accessToken = MAPBOX_ACCESS_TOKEN;\n\nvar map = null;\n\nclass MapComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            map: null,\n            matches: window.matchMedia(\"(min-width: 1000px)\").matches\n        }\n    }\n    mapboxElRef = createRef();\n\n    componentDidMount() {\n        var mapStyle = JSON.parse(JSON.stringify(this.props.style)).style;\n        map = new mapboxgl.Map({\n            container: this.mapboxElRef.current,\n            style: mapStyle,\n            center: [16, 27],\n            zoom: 2,\n        });\n        this.renderMap(map);\n    }\n\n    renderMap = (map) => {\n        var nav = new mapboxgl.NavigationControl();\n        map.addControl(nav, this.state.matches ? 'bottom-right' : 'top-right');\n\n        fetch(`/api/markers.geojson`)\n            .then(response => response.json())\n            .then(data =>\n                map.once('load', function () {\n                    map.addSource('points', {\n                        type: 'geojson',\n                        data: {\n                            type: 'FeatureCollection',\n                            features: data\n                        }\n                    });\n                    map.addLayer({\n                        id: 'circles',\n                        source: 'points',\n                        type: 'circle',\n                        paint: {\n                            'circle-opacity': 0.75,\n                            'circle-radius': [\n                                'interpolate', ['linear'],\n                                ['get', 'total_cases'],\n                                1,\n                                4,\n                                1000,\n                                8,\n                                4000,\n                                10,\n                                8000,\n                                14,\n                                12000,\n                                18,\n                                100000,\n                                40,\n                                250000,\n                                100\n                            ],\n                            'circle-color': '#EA240F'\n                        }\n                    });\n                    const popup = new mapboxgl.Popup({\n                        closeButton: false,\n                        closeOnClick: false\n                    });\n\n                    let previous_id;\n\n                    map.on('mousemove', 'circles', (e) => {\n                        const key = e.features[0].properties.key;\n                        if (key !== previous_id) {\n                            const { name, confirmed, deaths, recovered } = e.features[0].properties;\n                            map.getCanvas().style.cursor = 'pointer';\n\n                            const coordinates = e.features[0].geometry.coordinates.slice();\n                            const HTML = `<html> <style type=\"text/css\"> @import url('https://fonts.googleapis.com/css2?family=Lato&family=Roboto:ital,wght@0,400;0,500;1,300&display=swap'); body { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; } .header-title { font-family: 'Roboto', sans-serif; font-family: 'Lato', sans-serif; font-size: 15px; font-weight: bold; color: #000000; } .flex-container { height: 30px; display: flex; flex-wrap: nowrap; } .dot-container { width: 20px; height: 30px; display: flex; justify-content: center; align-items: center; } .title-container { width: 95px; height: 30px; display: flex; align-items: center; } .statistics-container { width: 80px; height: 30px; display: flex; justify-content: flex-end; align-items: center; } .confirmed-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #DA1400; } .deaths-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #525252; } .recovered-dot { width: 8px; height: 8px; border-radius: 50px; background-color: #3BD202; } .statistics-label { font-family: 'Roboto', sans-serif; font-size: 12px; } .statistics-count { font-family: 'Roboto', sans-serif; font-size: 12px; } </style> <body> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"40\"> <tr> <td align=\"center\" \"> <span class=\" header-title \">${name}</span> </td> </tr> </table> <table cellpadding=0 cellspacing=0 border=\"0\" width=\"200\" height=\"90\"> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"confirmed-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Confirmed</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${confirmed}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"deaths-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Deaths</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${deaths}</span></div> </td> </tr> <tr> <td align=\"center\" class=\"flex-container\"> <div class=\"dot-container\"><div class=\"recovered-dot\"></div></div> <div class=\"title-container\"><span class=\"statistics-label\">Recovered</span></div> <div class=\"statistics-container\"><span class=\"statistics-count\">${recovered}</span></div> </td> </tr> </table> </body> </html>`;\n\n                            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                            }\n                            popup.setLngLat(coordinates).setHTML(HTML).addTo(map);\n                        }\n                    });\n\n                    map.on('mouseleave', 'circles', function () {\n                        previous_id = undefined;\n                        map.getCanvas().style.cursor = '';\n                        popup.remove();\n                    });\n                })\n            );\n    }\n\n    render() {\n        var actionType = JSON.parse(JSON.stringify(this.props.action)).action;\n        if (actionType.action !== undefined) {\n            var action = actionType.action;\n            var mapStyle = JSON.parse(JSON.stringify(this.props.style)).style;\n            var statistics = JSON.parse(JSON.stringify(this.props.countryStatistics)).statistics;\n\n            if (mapStyle.style !== undefined && action === MAP_STYLE_ACTION) {\n                map = new mapboxgl.Map({\n                    container: this.mapboxElRef.current,\n                    style: mapStyle.style,\n                    center: [16, 27],\n                    zoom: 2,\n                });\n                this.renderMap(map);\n            }\n            if (map !== null && action === MAP_FLY_ACTION) {\n                if (statistics.item !== undefined) {\n                    map.flyTo({\n                        center: statistics.item,\n                        zoom: 4,\n                        bearing: 0,\n                        speed: 1,\n                        curve: 1,\n                        easing: function (t) {\n                            return t;\n                        },\n                        essential: true\n                    });\n                }\n            }\n        }\n        return (\n            <div className=\"mapbox-container\">\n                <div className=\"mapBox\" ref={this.mapboxElRef} />\n            </div>\n        );\n    }\n}\n\nconst stateProps = state => ({\n    countryStatistics: state.countryStatistics,\n    style: state.style,\n    action: state.action\n});\n\nexport default connect(stateProps, null)(MapComponent);\n","import React, {Component} from 'react';\n\nimport MapComponent from './MapComponent';\n\nclass MapProvider extends Component {\n  render() {\n    return <MapComponent/>;\n  }\n}\n\nexport default MapProvider;\n","import React , { Component } from 'react';\nimport './App.css';\n\nimport store from './store';\nimport {Provider} from 'react-redux';\n\nimport CoronaStatisticsProvider from './components/statistics/CoronaStatisticsProvider';\nimport MapProvider from './components/map/MapProvider';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <MapProvider/>\n        <CoronaStatisticsProvider/>\n      </Provider>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}